{
  "openapi": "3.0.0",
  "info": {
    "title": "Caf√© Delight Reservation API",
    "version": "1.0.0",
    "description": "API for managing restaurant table reservations with real-time updates"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/api/reservations": {
      "post": {
        "summary": "Create a new reservation",
        "tags": ["Reservations"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Reservation created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/reservations/{id}/status": {
      "patch": {
        "summary": "Update reservation status",
        "tags": ["Reservations"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["pending", "confirmed", "cancelled", "completed"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status updated successfully"
          },
          "400": {
            "description": "Invalid status"
          },
          "404": {
            "description": "Reservation not found"
          }
        }
      }
    },
    "/api/tables/available": {
      "get": {
        "summary": "Get available tables",
        "tags": ["Tables"],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of available tables",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TableStatus"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ReservationInput": {
        "type": "object",
        "required": ["name", "email", "phone", "date", "time", "partySize"],
        "properties": {
          "name": {
            "type": "string",
            "pattern": "^[A-Za-z]+ [A-Za-z]+$",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "phone": {
            "type": "string",
            "pattern": "^\\(\\d{3}\\) \\d{3}-\\d{4}$",
            "example": "(555) 123-4567"
          },
          "date": {
            "type": "string",
            "format": "date",
            "example": "2025-04-15"
          },
          "time": {
            "type": "string",
            "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
            "example": "18:30"
          },
          "partySize": {
            "type": "integer",
            "minimum": 1,
            "maximum": 20,
            "example": 4
          },
          "location": {
            "type": "string",
            "enum": ["indoor", "outdoor", "private", ""],
            "example": "indoor"
          },
          "specialRequests": {
            "type": "string",
            "maxLength": 500,
            "example": "Allergic to nuts"
          }
        }
      },
      "ReservationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success", "error"]
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Reservation"
          }
        }
      },
      "Reservation": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "time": {
            "type": "string"
          },
          "partySize": {
            "type": "integer"
          },
          "tableNumber": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "confirmed", "cancelled", "completed"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TableStatus": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "enum": ["available", "reserved", "occupied"]
          },
          "capacity": {
            "type": "integer"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["error"]
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}